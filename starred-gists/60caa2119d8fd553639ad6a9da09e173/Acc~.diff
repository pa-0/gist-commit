--- Acc.ahk
+++ Acc1.ahk
@@ -1 +1 @@
-﻿#Requires AutoHotkey v2.0
+﻿#Requires AutoHotkey v1.1
@@ -12 +12 @@
-Acc_ObjectFromEvent(&ChildIdOut, hWnd, ObjectId, ChildId) {
+Acc_ObjectFromEvent(ByRef ChildIdOut, hWnd, ObjectId, ChildId) {
@@ -14 +14 @@
-    child := Buffer(A_PtrSize * 2 + 8, 0)
+    VarSetCapacity(child, A_PtrSize * 2 + 8, 0)
@@ -16 +16 @@
-    NTSTATUS := DllCall(address, "Ptr", hWnd, "UInt", ObjectId, "UInt", ChildId, "Ptr*", &pAcc, "Ptr", child, "UInt")
+    NTSTATUS := DllCall(address, "Ptr", hWnd, "UInt", ObjectId, "UInt", ChildId, "Ptr*", pAcc, "Ptr", &child, "UInt")
@@ -18 +18 @@
-        throw Error("AccessibleObjectFromEvent() failed.", -1, OsError().Message)
+        throw Exception("AccessibleObjectFromEvent() failed.", -1, A_LastError)
@@ -21 +21 @@
-    return ComValue(9, pAcc, 1)
+    return ComObj(9, pAcc, 1)
@@ -24 +24 @@
-Acc_ObjectFromPoint(&ChildIdOut := "", x := 0, y := 0) {
+Acc_ObjectFromPoint(ByRef ChildIdOut := "", x := 0, y := 0) {
@@ -28 +28 @@
-        DllCall("GetCursorPos", "Int64*", &point)
+        DllCall("GetCursorPos", "Int64*", point)
@@ -31,2 +31,2 @@
-    child := Buffer(A_PtrSize * 2 + 8, 0)
-    NTSTATUS := DllCall(address, "Int64", point, "Ptr*", &pAcc, "Ptr", child, "UInt")
+    VarSetCapacity(child, A_PtrSize * 2 + 8, 0)
+    NTSTATUS := DllCall(address, "Int64", point, "Ptr*", pAcc, "Ptr", &child, "UInt")
@@ -34 +34 @@
-        throw Error("AccessibleObjectFromPoint() failed.", -1, OsError().Message)
+        throw Exception("AccessibleObjectFromPoint() failed.", -1, A_LastError)
@@ -37 +37 @@
-    return ComValue(9, pAcc, 1)
+    return ComObj(9, pAcc, 1)
@@ -59 +59 @@
-    IID := Buffer(16, 0)
+    VarSetCapacity(IID, 16, 0)
@@ -61 +61 @@
-    rIID := NumPut("Int64", addr, IID)
+    rIID := NumPut(addr, IID, "Int64")
@@ -63 +63 @@
-    rIID := NumPut("Int64", addr, rIID) - 16
+    rIID := NumPut(addr, rIID + 0, "Int64") - 16
@@ -65 +65 @@
-    NTSTATUS := DllCall(address, "Ptr", hWnd, "UInt", ObjectId, "Ptr", rIID, "Ptr*", &pAcc, "UInt")
+    NTSTATUS := DllCall(address, "Ptr", hWnd, "UInt", ObjectId, "Ptr", rIID, "Ptr*", pAcc, "UInt")
@@ -67 +67 @@
-        throw Error("AccessibleObjectFromWindow() failed.", -1, OsError().Message)
+        throw Exception("AccessibleObjectFromWindow() failed.", -1, A_LastError)
@@ -69 +69 @@
-    return ComValue(9, pAcc, 1)
+    return ComObj(9, pAcc, 1)
@@ -75 +75 @@
-        throw Error("Not an object.", -1, oAcc)
+        throw Exception("Not an object.", -1, oAcc)
@@ -79 +79 @@
-    NTSTATUS := DllCall(address, "Ptr", pAcc, "Ptr*", &hWnd, "UInt")
+    NTSTATUS := DllCall(address, "Ptr", pAcc, "Ptr*", hWnd, "UInt")
@@ -81 +81 @@
-        throw Error("WindowFromAccessibleObject() failed.", -1, OsError().Message)
+        throw Exception("WindowFromAccessibleObject() failed.", -1, A_LastError)
@@ -90 +90 @@
-        throw Error("GetRoleText() failed.", -1, OsError().Message)
+        throw Exception("GetRoleText() failed.", -1, A_LastError)
@@ -92,2 +92,2 @@
-    size := VarSetStrCapacity(&role, size + 1)
-    size := DllCall(address, "UInt", nRole, "Str", &role, "UInt", size, "UInt")
+    size := VarSetCapacity(role, size * 2, 0)
+    size := DllCall(address, "UInt", nRole, "Str", role, "UInt", size, "UInt")
@@ -95 +95 @@
-        throw Error("GetRoleText() failed.", -1, OsError().Message)
+        throw Exception("GetRoleText() failed.", -1, A_LastError)
@@ -104 +104 @@
-        throw Error("GetStateText() failed.", -1, OsError().Message)
+        throw Exception("GetStateText() failed.", -1, A_LastError)
@@ -106,2 +106,2 @@
-    size := VarSetStrCapacity(&state, size + 1)
-    size := DllCall(address, "UInt", nState, "Str", &state, "UInt", size, "UInt")
+    size := VarSetCapacity(state, size * 2, 0)
+    size := DllCall(address, "UInt", nState, "Str", state, "UInt", size, "UInt")
@@ -109 +109 @@
-        throw Error("GetStateText() failed.", -1, OsError().Message)
+        throw Exception("GetStateText() failed.", -1, A_LastError)
@@ -123 +123 @@
-Callback := CallbackCreate("WinEventProc")
+Callback := RegisterCallback("WinEventProc")
@@ -136 +136 @@
-        role := oAcc.accRole(ChildId)
+        role := oAcc.accRole(ChildId + 0)
@@ -145 +145 @@
-        state := oAcc.accState(ChildId)
+        state := oAcc.accState(ChildId + 0)
@@ -151 +151 @@
-Acc_Location(oAcc, ChildId := 0, &Position := "") {
+Acc_Location(oAcc, ChildId := 0, ByRef Position := "") {
@@ -153,8 +153,8 @@
-    x := Buffer(4, 0)
-    y := Buffer(4, 0)
-    w := Buffer(4, 0)
-    h := Buffer(4, 0)
-    xPtr := ComValue(varType, x.Ptr, 1)
-    yPtr := ComValue(varType, y.Ptr, 1)
-    wPtr := ComValue(varType, w.Ptr, 1)
-    hPtr := ComValue(varType, h.Ptr, 1)
+    VarSetCapacity(x, 4, 0)
+    VarSetCapacity(y, 4, 0)
+    VarSetCapacity(w, 4, 0)
+    VarSetCapacity(h, 4, 0)
+    xPtr := ComObj(varType, &x, 1)
+    yPtr := ComObj(varType, &y, 1)
+    wPtr := ComObj(varType, &w, 1)
+    hPtr := ComObj(varType, &h, 1)
@@ -164 +164 @@
-        oAcc.accLocation(xPtr, yPtr, wPtr, hPtr, ChildId)
+        oAcc.accLocation(xPtr, yPtr, wPtr, hPtr, ChildId + 0)
@@ -183 +183 @@
-        child := oAcc.AccChild(ChildId)
+        child := oAcc.AccChild(ChildId + 0)
@@ -192 +192 @@
-        return ComValue(9, query, 1)
+        return ComObj(9, query, 1)
@@ -208 +208 @@
-        throw Error("Invalid IAccessible Object", -1, oAcc)
+        throw Exception("Invalid IAccessible Object", -1, oAcc)
@@ -212 +212 @@
-    accChildren := Buffer(oAcc.accChildCount * size, 0)
+    VarSetCapacity(accChildren, oAcc.accChildCount * size, 0)
@@ -214 +214 @@
-    NTSTATUS := DllCall(address, "Ptr", pAcc, "Int", 0, "Int", oAcc.accChildCount, "Ptr", accChildren, "Int*", &obtained, "UInt")
+    NTSTATUS := DllCall(address, "Ptr", pAcc, "Int", 0, "Int", oAcc.accChildCount, "Ptr", &accChildren, "Int*", obtained, "UInt")
@@ -216 +216 @@
-        throw Error("AccessibleChildren() failed.", -1, OsError().Message)
+        throw Exception("AccessibleChildren() failed.", -1, A_LastError)
@@ -219 +219 @@
-    loop (obtained) {
+    loop % obtained {
@@ -271 +271 @@
-        throw Error("Command not implemented", -1, Command)
+        throw Exception("Command not implemented", -1, Command)
@@ -281 +281 @@
-        throw Error("Cannot access an IAccessible Object", -1, oAcc)
+        throw Exception("Cannot access an IAccessible Object", -1, oAcc)
@@ -285 +285 @@
-        RegExMatch(item, "S)(?<Role>\D+)(?<Index>\d*)", &match)
+        RegExMatch(item, "OS)(?<Role>\D+)(?<Index>\d*)", match)
@@ -292 +292 @@
-        if (children.Has(item)) {
+        if (children.HasKey(item)) {
@@ -299 +299 @@
-        throw Error("Cannot access ChildPath Item", -1, extra)
+        throw Exception("Cannot access ChildPath Item", -1, extra)
@@ -311,2 +311,2 @@
-        case "ChildCount", "Focus", "Selection": out := oAcc.acc%Command%
-        default: out := oAcc.acc%Command%(ChildId)
+        case "ChildCount", "Focus", "Selection": out := oAcc["acc" Command]
+        default: out := oAcc["acc" Command](ChildId + 0)
