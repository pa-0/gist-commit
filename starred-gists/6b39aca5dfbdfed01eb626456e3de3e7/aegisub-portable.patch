--- a/libaegisub/unix/path.cpp
+++ b/libaegisub/unix/path.cpp
@@ -22,8 +22,22 @@
 #include <boost/filesystem/operations.hpp>
 #include <pwd.h>
 
+#ifdef LINUX_PORTABLE_BUILD
+#include <iostream>
+#endif
+
 namespace {
 #ifndef __APPLE__
+#ifdef LINUX_PORTABLE_BUILD
+std::string aegisub_data_dir() {
+	const char *env = getenv("AEGISUB_DATA");
+	if (env)
+		return env;
+	else
+		std::cout << "Environment variable AEGISUB_DATA is not set!" << std::endl;
+		std::exit(1);
+}
+#else
 std::string home_dir() {
 	const char *env = getenv("HOME");
 	if (env) return env;
@@ -36,16 +50,25 @@
 	throw agi::EnvironmentError("Could not get home directory. Make sure HOME is set.");
 }
 #endif
+#endif
 }
 
 namespace agi {
 void Path::FillPlatformSpecificPaths() {
 #ifndef __APPLE__
+#ifdef LINUX_PORTABLE_BUILD
+	agi::fs::path aegidata = aegisub_data_dir();
+	SetToken("?user", aegidata/"config");
+	SetToken("?local", aegidata/"config");
+	SetToken("?data", aegidata);
+	SetToken("?dictionary", aegidata/"dictionaries");
+#else
 	agi::fs::path home = home_dir();
 	SetToken("?user", home/".aegisub");
 	SetToken("?local", home/".aegisub");
 	SetToken("?data", P_DATA);
 	SetToken("?dictionary", "/usr/share/hunspell");
+#endif
 #else
 	agi::fs::path app_support = agi::util::GetApplicationSupportDirectory();
 	SetToken("?user", app_support/"Aegisub");
